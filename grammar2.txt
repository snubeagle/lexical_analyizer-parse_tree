PROGRAM -> program IDENTIFIER BLOCK .
BLOCK -> COMPOUND_STATEMENT
BLOCK -> VAR_DECLARATION_SECTION COMPOUND_STATEMENT
VAR_DECLARATION_SECTION -> var VAR_DECLARATION'
VAR_DECLARATION' -> VAR_DECLARATION
VAR_DECLARATION' -> VAR_DECLARATION ; VAR_DECLARATION'
VAR_DECLARATION -> IDENTIFIER' : TYPE
IDENTIFIER' -> identifier
IDENTIFIER' -> IDENTIFIER identifier
IDENTIFIER -> identifier
TYPE -> integer_type
TYPE -> boolean_type
COMPOUND_STATEMENT -> begin STATEMENT' end
STATEMENT' -> STATEMENT
STATEMENT' -> STATEMENT ; STATEMENT'
STATEMENT -> SIMPLE_STATEMENT
STATEMENT -> STRUCTURED_STATEMENT
SIMPLE_STATEMENT -> ASSIGNMENT_STATEMENT
SIMPLE_STATEMENT -> READ_STATEMENT
SIMPLE_STATEMENT -> WRITE_STATEMENT
ASSIGNMENT_STATEMENT -> IDENTIFIER := EXPRESSION
READ_STATEMENT -> read IDENTIFIER
WRITE_STATEMENT -> write IDENTIFIER
WRITE_STATEMENT -> write LITERAL
STRUCTURED_STATEMENT -> IF_STATEMENT
STRUCTURED_STATEMENT -> WHILE_STATEMENT
STRUCTURED_STATEMENT -> COMPOUND_STATEMENT
IF_STATEMENT -> IF THEN ELSE
IF -> if BOOLEAN_EXPRESSION
THEN -> then STATEMENT
ELSE -> else STATEMENT
WHILE_STATEMENT -> while BOOLEAN_EXPRESSION DO
DO -> do STATEMENT
EXPRESSION -> ARITHMETIC_EXPRESSION
EXPRESSION -> BOOLEAN_EXPRESSION
ARITHMETIC_EXPRESSION -> ARITHMETIC_EXPRESSION + TERM
ARITHMETIC_EXPRESSION -> ARITHMETIC_EXPRESSION - TERM
ARITHMETIC_EXPRESSION -> TERM
TERM -> TERM * FACTOR
TERM -> FACTOR
FACTOR -> IDENTIFIER
FACTOR -> INTEGER_LITERAL
LITERAL -> INTEGER_LITERAL
LITERAL -> BOOLEAN_LITERAL
INTEGER_LITERAL -> integer
BOOLEAN_LITERAL -> true
BOOLEAN_LITERAL -> false
BOOLEAN_EXPRESSION -> BOOLEAN_LITERAL
BOOLEAN_EXPRESSION -> ARITHMETIC_EXPRESSION > ARITHMETIC_EXPRESSION
BOOLEAN_EXPRESSION -> ARITHMETIC_EXPRESSION >= ARITHMETIC_EXPRESSION
BOOLEAN_EXPRESSION -> ARITHMETIC_EXPRESSION = ARITHMETIC_EXPRESSION
BOOLEAN_EXPRESSION -> ARITHMETIC_EXPRESSION <= ARITHMETIC_EXPRESSION
BOOLEAN_EXPRESSION -> ARITHMETIC_EXPRESSION < ARITHMETIC_EXPRESSION
